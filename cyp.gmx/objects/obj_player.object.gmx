<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sp_player_test</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize Variables
xsp = 0; //xspeed, yspeed
ysp = 0;
movespeed = 2;
jumpspeed = 5;
attackspeed = 15; //attackspeed is # frames between attacks
global.p_hp = 100;
p_invulnerable = false;
texture_set_interpolation(false);
gamepad_set_axis_deadzone(0, 0.5);
//animation flags:
enum p_state
{
    idle,
    move,
    shoot,
    attack
}
state = p_state.idle;
idle_speed = 0.05;
image_speed = idle_speed;

//for camera:
room_id = room;

//
key_jump = 0;

//for shooting script:
shooting = 0;
shoot_right = 0;
shoot_left  = 0;
shoot_up    = 0;
shoot_down  = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>shooting = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>p_invulnerable = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>scr_inputs();
//change states to move / idle
if     (state == p_state.attack){}
else if(xsp != 0) {state = p_state.move;}
else if(ysp != 0) {state = p_state.move;}
else              {state = p_state.idle;}
scr_jump();
scr_move();
if((shoot_right || shoot_left || shoot_up || shoot_down) &amp;&amp; shooting == 0)
{
    scr_shoot();
    alarm[1] = attackspeed;
    shooting = 1;
}

if(key_attack &amp;&amp; shooting == 0)
{
    scr_attack();
    alarm[1] = attackspeed;
    shooting = 1;
}

//camera spawning:
if(room_id != room)
{
    instance_create(0,0,obj_camera);
    room_id = room;
}

// player animation:
/* OLD PLAYER SPRITE
if(image_index == 0 &amp;&amp; state == p_state.idle) {image_speed = idle_speed;}
else if(image_index == 2 &amp;&amp; state == p_state.idle) {image_index = 0;}
//  shooting:
//              still part of if statement from above
else if((image_index == 3 || image_index == 4) &amp;&amp; state == p_state.shoot){state = p_state.idle;}
else if(image_index &gt; 5 &amp;&amp; state == p_state.shoot) {image_index = 3;}
else if(image_index &gt; 5 &amp;&amp; state == p_state.idle)  {image_speed = idle_speed;}
if(state == p_state.shoot)
{
    image_speed = 0.5;
    //state = p_state.idle;
}
*/

if     (state == p_state.idle)
{
    if(image_index == 0)      image_speed = idle_speed;
    else if(image_index &gt;= 4) image_index = 0;
}
else if(image_index == 4 &amp;&amp; state == p_state.idle) {image_index = 0;}
else if(state == p_state.move)
{
    image_speed = 0.1;
    if(image_index &lt; 5){image_index = 5;}
    else if(image_index &gt; 7){image_index = 5;}
}
else if(state == p_state.attack)
{
    image_speed = 0.14;
    if(image_index &lt; 8){image_index = 8;}
    else if(image_index &gt;= 10 &amp;&amp; key_attack){image_index = 9;}
    else if(round(image_index) == 11){state = p_state.idle}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_enemy_temp">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(p_invulnerable != true)
{
    global.p_hp -= obj_enemy_temp.damage;
    p_invulnerable = true;
    alarm[0] = room_speed;
}
if(global.p_hp &lt;= 0) game_restart();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
