<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprite12</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_enemy_temp</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>max_hp = 60; hp = 60;
damage = 35;
movespeed = 4;
walkspeed = 2; //how fast idle movements are made

state = e_state.idle;
xsp = 0;
ysp = 0;
x_move = 0;
//y_move = 0;

chase_distance = 75; // THIS NUMBER MUST BE HIGHER THAN IDLE_DISTANCE
idle_distance  = 200;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//robots wander in either x or y direction;
neg = choose(-1, 1);
if(irandom(1) == 0) {x_move = irandom(10) + 15; /*y_move = 0;*/}
//else                {y_move = irandom(10) + 15; x_move = 0;}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
state = e_state.chase;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>alarm[1] = room_speed * 0.5;
state = e_state.alert;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>switch(state)
{
    case e_state.idle:
    {
        xsp = 0;
        //ysp = 0;
        image_index = 0;
        image_speed = 0;
        //alarm[2] = 60;
        if(alarm[2] == -1)
        {
            alarm[2] = room_speed;
        }
        if(x_move)
        {
            for(i = 0; i &lt; walkspeed; i++)
            {
                if(x_move &gt; 0){x_move -= 1;}
                else          {break;      }
            }
            xsp += i * neg;
        }
        /*if(y_move)
        {
            for(i = 0; i &lt; walkspeed; i++)
            {
                if(y_move &gt; 0){y_move -= 1;}
                else          {break;      }
            }
            ysp += i * neg;
            scr_move();
        }*/
        scr_move();
        if(distance_to_object(obj_player) &lt; chase_distance) state = e_state.chase;
        break;
    }
    case e_state.chase:
    {
        dir_x = sign(obj_player.x - x);
        //dir_y = sign(obj_player.y - y);
        dist_x = abs(obj_player.x - x);
        //dist_y = abs(obj_player.y - y);

        for(i = 0; i &lt; movespeed-1; i++)
        {
            //if      (dist_x == 0 &amp;&amp; dist_y == 0) {/*nothing*/}
            //else if (dist_x + abs(xsp) &gt;= dist_y + abs(ysp)) {xsp += dir_x;}
            //else if (dist_x + abs(xsp) &lt;  dist_y + abs(ysp)) {ysp += dir_y;}
            //this way no movement if both x==obj_player.x &amp;&amp; y==obj_player.y
            if(dist_x != 0) xsp += dir_x;
        }

        image_speed = 0.16;
        //sprite_index = spider_mine_walking;
        scr_move();
        xsp = 0;
        //ysp = 0;
        if(distance_to_object(obj_player) &gt; idle_distance) state = e_state.idle;
        break;
    }
    case e_state.collide:
    {
        dir_x = sign(obj_player.x - x);
        //dir_y = sign(obj_player.y - y);
        
        xsp = (-dir_x * 4) + (xsp * -0.20);
        ysp = -1 + (ysp * global.grav);
        //ysp = (-dir_y * 2) + (ysp * -0.20);
        if(xsp != 0){image_xscale = sign(xsp);}
        scr_move();
        //xsp = 0;
        //ysp = 0;
        //if(alarm[0] == -1){alarm[1] = room_speed; state = e_state.alert;}
        break;
    }
    case e_state.alert:
    {
        scr_move();
        if(place_meeting(round(x), round(y+1), obj_wall))
        {
            xsp = 0;
        }
        //if(alarm[1] == -1){state = e_state.chase;}
        break;
    }
}

//scr_animate();
//this kills the crab
if(hp &lt;= 0)
{
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_player">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>state = e_state.collide;
alarm[0] = room_speed * 0.1;

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
